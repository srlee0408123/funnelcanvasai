---
description: "워크스페이스 관리 시 참고하세요 - 생성, 조회, 멤버 관리, 자료 업로드 기능"
---

## 2. 워크스페이스 (Workspace)

### 라우터
* `GET /api/workspaces`: 현재 사용자가 소유한 워크스페이스 목록을 조회합니다.
* `POST /api/workspaces`: 새 워크스페이스를 생성하고 소유자를 멤버로 자동 추가합니다.
* `GET /api/workspaces/[workspaceId]/assets`: 특정 워크스페이스 또는 캔버스에 속한 모든 자료(지식) 목록을 조회합니다.
* `POST /api/workspaces/[workspaceId]/assets`: URL, YouTube, 텍스트 등 다양한 타입의 자료를 업로드하고 지식으로 저장합니다.
* `POST /api/workspaces/[workspaceId]/upload-pdf`: PDF 파일을 업로드하고 텍스트 추출, 청킹 후 지식으로 저장합니다.
* `DELETE /api/workspaces/[workspaceId]`: 워크스페이스를 삭제합니다. (owner 전용, CASCADE로 하위 데이터 전체 삭제)

### UI 컴포넌트
* `app/dashboard/client.tsx (DashboardClient)`: 워크스페이스 목록 표시/생성/삭제, 실시간 변경 구독(Supabase Realtime)
  - 삭제 버튼은 UI에 표시되며 서버에서 owner 권한을 강제 검증합니다.
* `app/workspace/[workspaceId]/client.tsx (WorkspaceClient)`: 특정 워크스페이스의 캔버스 목록 표시, 생성/삭제, 공유 모달 연동, 실시간 구독
  - 캔버스 삭제 버튼은 워크스페이스 소유자(owner)에게만 표시됩니다.
* `components/Modals/WorkspaceMembersModal.tsx`: 워크스페이스 멤버 초대, 역할 변경, 멤버 제거 UI

### 스키마 (Drizzle ORM)
* `workspaces`: 워크스페이스 정보(`id`, `ownerUserId`, `name`, `plan`, `createdAt`, `updatedAt`)를 저장합니다.
* `workspaceMembers`: 워크스페이스 멤버와 역할을 정의하며 `workspaceId`, `userId`, `role`(owner/admin/editor/viewer) 필드를 포함합니다.
* `assets`: 워크스페이스별 업로드 자료(`id`, `workspaceId`, `canvasId`, `type`, `title`, `status`, `metaJson`)를 저장합니다.

### 서비스 함수/훅
* 권한/역할
  - `useWorkspaceRole (Hook)`: 현재 사용자의 역할(owner/admin/editor/viewer)과 권한 매트릭스(`canInviteMembers`, `canManageMembers`, `canManageAssets` 등)를 제공합니다.
  - `withAuthorization (HOF)`: API 라우트에서 워크스페이스 접근 권한을 중앙에서 검증합니다. 예) `DELETE /api/workspaces/[workspaceId]`(minRole: owner), `GET/POST /api/workspaces/[workspaceId]/assets`.

* 워크스페이스 서비스
  - `getUserWorkspaces (Service)`: 사용자가 소유한 워크스페이스 목록 조회.
  - `createWorkspace (Service)`: 워크스페이스 생성 후 소유자를 `workspace_members`에 owner로 자동 추가.

* 클라이언트 상태/페칭
  - `apiRequest`, `queryClient.invalidateQueries`: 일관된 에러 처리와 캐시 무효화로 UI 갱신 보장.
  - Supabase Realtime 구독: `DashboardClient`, `WorkspaceClient`에서 테이블 변경사항을 구독해 실시간 반영.

* 멤버 관리 UI
  - `WorkspaceMembersModal (Component)`: 멤버 초대(이메일/역할), 역할 변경, 멤버 제거. 성공/실패 토스트 제공 및 React Query 캐시 갱신.

### 사용자 워크플로우
1. 대시보드에서 워크스페이스 생성: 이름 입력 → 생성 성공 시 목록 즉시 갱신(캐시 무효화/실시간 구독).
2. 워크스페이스 진입: 캔버스 목록 로드 및 실시간 구독 → 새 캔버스 생성/삭제 가능, 공유 모달로 접근 제어.
3. 멤버 관리(선택): 멤버 초대 → 역할(editor/viewer/admin) 변경 → 필요 시 제거.
4. 자료 업로드(선택): 워크스페이스 컨텍스트에서 URL/YouTube/텍스트 업로드 또는 PDF 업로드 → 청킹/임베딩 후 `canvas_knowledge` 저장 → UI 목록 갱신.

### 핵심 특징
* **멀티 테넌트 구조**: 각 워크스페이스는 독립적인 데이터 공간을 제공합니다.
* **역할 기반 접근제어**: owner → admin → editor → viewer 순으로 권한이 제한됩니다.
* **실시간 업데이트**: Supabase Realtime을 통해 워크스페이스/캔버스 변경 사항을 즉시 반영합니다.
* **일관된 API/에러 처리**: `apiRequest` + React Query 조합으로 표준화된 통신/캐시/에러 패턴 유지.
* **안전한 삭제 흐름**: `DELETE /api/workspaces/[workspaceId]`는 owner만 수행 가능하며, DB CASCADE 제약으로 연결된 모든 캔버스와 하위 데이터(상태, 노드/엣지, 투두, 공유, 메모, 지식/청크, 채팅 등)가 자동 삭제됩니다.
* **자동 멤버십**: 워크스페이스 생성자는 자동으로 owner 역할로 추가됩니다.